{"version":3,"sources":["assets/Header.png","helpers/api.js","components/Gallery.js","components/SearchBar.js","components/Loader.js","components/SaveMovie.js","components/FormUserList.js","components/SavedList.js","components/Header.js","components/Footer.js","container/QuickFlickPicker.js","container/MovieDetails.js","firebase.js","container/UserList.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","searchMovies","movieName","axios","url","params","api_key","language","sort_by","include_adult","include_video","page","query","then","res","data","results","Gallery","props","movies","className","map","movie","key","id","to","src","poster_path","alt","original_title","SearchBar","handleSearchText","handleSearch","handleSubmit","action","onSubmit","type","onChange","e","onClick","Loader","SaveMovie","FormUserList","handleChange","handleClick","userListName","htmlFor","name","value","placeholder","SavedList","userList","handleDeleteList","handleDeleteMovie","listName","console","log","info","list","listItem","index","Header","image","Footer","QuickFlickPicker","setState","searchText","target","state","event","preventDefault","searched","this","Component","MovieDetails","loading","savedMovie","movieID","match","title","tagline","overview","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","UserList","newList","database","ref","dataToPush","push","deleteList","child","remove","movieListKey","indexOfMovie","on","snapshot","newState","val","listData","Routes","basename","process","exact","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.17ba5091.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Header.0d15b446.png\";","import axios from 'axios'\n\nexport const discoverMovies = () => {\n  return axios({\n    url: `https://api.themoviedb.org/3/discover/movie`,\n    params: {\n      api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n      language: 'en-US',\n      sort_by: 'popularity.desc',\n      include_adult: 'false',\n      include_video: 'false',\n      page: 1,\n    },\n  }).then((res) => {\n    res = res.data.results;\n    return res\n  })\n}\n\nexport const searchMovies = (movieName) => {\n  return axios({\n    url: `https://api.themoviedb.org/3/search/movie`,\n    params: {\n      api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n      language: 'en-US',\n      sort_by: 'popularity.desc',\n      include_adult: 'false',\n      include_video: 'false',\n      page: 1,\n      query: movieName\n    },\n  }).then((res) => {\n    res = res.data.results;\n    return res\n  })\n}\n\nexport const searchMovieDetails = (movieID) => {\n  return axios({\n    url: `https://api.themoviedb.org/3/movie/${movieID}`,\n    params: {\n      api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n      language: 'en-US',\n      sort_by: 'popularity.desc',\n      include_adult: 'false',\n      include_video: 'false',\n      page: '1'\n    },\n  }).then( (res) => {\n    return res.data\n  })\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Gallery = (props) => {\n  const { movies } = props\n\n  return (\n    <div className=\"catalogue\">\n      {\n        movies.map((movie) => {\n          return (\n            <div key={movie.id} className=\"movie\">\n              <Link to={`/movie/${movie.id}`}>\n                <img src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={`Movie poster for ${movie.original_title}`} />\n              </Link>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}\n\nexport default Gallery;","import React from 'react'\n\nconst SearchBar = (props) => {\n  const {\n    handleSearchText,\n    handleSearch,\n    handleSubmit\n  } = props\n\n  return (\n    <div>\n      <form action=\"submit\" onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={(e) => handleSearchText(e)}  />\n      <button onClick={ handleSearch }>SEARCH</button>\n      </form>\n\n    </div>\n  )\n}\n\nexport default SearchBar","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <p>loading...</p>\n  )\n}\n\nexport default Loader","import React from 'react'\n\nconst SaveMovie = (props) => {\n  // const { saveMovie } = props\n\n  return (\n    <button>Save Movie</button>\n  )\n}\n\nexport default SaveMovie","import React from 'react'\n\nconst FormUserList = (props) => {\n    const { handleChange, handleClick, userListName } = props\n\n\n    return (\n        <div className=\"formContainer\">\n            <form action=\"text\">\n                <fieldset>\n                    <legend>Create your list</legend>\n                        <div className=\"newListContainer\">\n                            <label className=\"srOnly\" htmlFor=\"newList\">New list here</label>\n                            <input onChange={handleChange} type=\"text\" name=\"newList\" value={userListName} placeholder=\"New list here\" id=\"newList\" className=\"newList\"/>\n                            <button className=\"newListButton\" onClick={handleClick}>+</button>\n                        </div>\n                </fieldset>\n                \n            </form>\n        </div>\n  )\n}\n\nexport default FormUserList","\nimport React from 'react'\n\n\n\nconst SavedList = (props) => {\n    const { userList, handleDeleteList, handleDeleteMovie } = props\n    return (\n        <ul className=\"movieListContainer\">\n            {\n                userList.map((listName) => {\n                    console.log(userList);\n                    return(\n                        <li className=\"movieList\" key={listName.key}>\n                            <div className=\"movieListTitle\">\n                                <p>{listName.info.name}</p>\n                                <button onClick={() => {handleDeleteList(listName.key)}}>Delete List</button>\n                            </div>  \n                        <div className=\"selectedMoviesinList\">\n                          <ul>\n\n                            {\n                              listName.info.list.map((listItem, index) => {\n                                return (\n                                  <li key={`${listName.key}-${index}`}\n                                    className=\"selectedMovies\">\n                                    {listItem}\n                                    <button onClick={() => { handleDeleteMovie(listName.key, index) }}\n                                    >Delete Movie</button>\n                                  </li>\n                                )\n                              })\n                            }\n                          </ul>\n                        </div>  \n                        </li>\n                    \n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nexport default SavedList\n\n\n","import React from 'react';\nimport image from '../assets/Header.png';\n\nconst Header = () => {\n    return(\n        <header>\n            <div className=\"wrapper headerContainer\">\n                <div className=\"titleContainer\">\n                    <h1>Quick Flick Picker</h1>\n                    <h2>A curator for blockbusters and movies</h2>\n                </div>\n\n                <div className=\"imageContainer\">\n                    <img src={image} alt=\"Retro camera\"/>\n                </div>\n            </div>\n            \n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"wrapper\">\n        <p>Developed by Krupali Thakkar, David Allen-Jordan, Clayton Puno, Pik Lin Hoe</p>\n      </div>\n    </footer>\n  )\n}\nexport default Footer;","import React, { Component } from 'react'\nimport { discoverMovies, searchMovies } from '../helpers/api'\nimport { \n  Gallery, \n  SearchBar \n} from '../components'\n\nclass QuickFlickPicker extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movies: [],\n      searchText: '',\n      searched: false\n    }\n  }\n\n  componentDidMount() {\n    discoverMovies()\n      .then(data => this.setState({ movies: data }))\n  }\n\n  handleSearchText = (e) => {\n    this.setState({ searchText: e.target.value })\n  }\n\n  handleSearch = () => {\n    searchMovies(this.state.searchText)\n      .then(data => this.setState({ movies: data}))\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    searchMovies(this.state.searchText)\n    .then(data => this.setState({ movies: data, searched: true}))\n\n  }\n\n  render() {\n    const { movies, searched } = this.state\n\n    return (\n      <div>\n        <SearchBar \n          handleSearchText={this.handleSearchText} \n          handleSearch={this.handleSearch} \n          handleSubmit={this.handleSubmit}\n        />\n        {this.state.searched && <Gallery movies={movies} />}\n      </div>\n    )\n  }\n\n}\n\nexport default QuickFlickPicker","import React, { Component } from 'react'\nimport { searchMovieDetails } from '../helpers/api'\nimport { Loader } from '../components'\nimport { SaveMovie } from '../components'\n// import firebase from '../firebase';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super()\n    this.state = {\n      movie: {},\n      loading: true,\n      savedMovie: []\n    }\n  }\n\n  componentDidMount() {\n    const { match } = this.props\n    searchMovieDetails(match.params.movieID)\n      .then(data => this.setState({ movie: data, loading: false }))   \n    \n  }\n\n\n  render() {\n    const { title, tagline, overview, poster_path } = this.state.movie\n    const { loading } = this.state\n    // const { onClick } = this.state.savedMovie\n\n    return (\n      <>\n        {\n          loading ? <Loader /> :\n          <div className=\"poster\">\n            <div className=\"description\">\n              <h1>{title}</h1>\n              <h2>{tagline}</h2>\n              <p>{overview}</p>\n            </div>\n            <div className=\"image\">\n              <img src={`http://image.tmdb.org/t/p/w500/${poster_path}`} alt={`Movie poster for ${title}`}/>\n            </div>\n            <SaveMovie/>\n          </div>\n        }\n      </>\n    )\n  }\n}\n\nexport default MovieDetails","  import firebase from 'firebase/app';\n  import 'firebase/database';\n\n  // Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCGTiHiUbOdDgDWLE_5L-vE5Ti1Nr9FyDw\",\n    authDomain: \"quick-flick-picker-1d7bd.firebaseapp.com\",\n    databaseURL: \"https://quick-flick-picker-1d7bd.firebaseio.com\",\n    projectId: \"quick-flick-picker-1d7bd\",\n    storageBucket: \"quick-flick-picker-1d7bd.appspot.com\",\n    messagingSenderId: \"1031062113355\",\n    appId: \"1:1031062113355:web:f817b635cd825646d151ce\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;\n","import React, { Component } from 'react';\nimport firebase from '../firebase';\nimport { FormUserList } from '../components/'\nimport { SavedList } from '../components/'\n\n// Listening for user input and to create a new object in Firebase. When onClick, new list is created\n// Delete button for the whole object (list)\n// Display the Firebase object as a dropdown with a delete button on each item\n// Button takes the movie data in the list and sends it to the next Component\n\nclass UserList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userList: [],\n            userListName: '',\n            movies: []\n        }\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n        \n        dbRef.on('value', (snapshot) => {\n\n        const newState = [];\n\n        const data = snapshot.val();\n\n        for (let key in data) {\n            const listData = {\n                key: key,\n                info: data[key],\n              }\n              // console.log(data[key])\n            \n            newState.push(listData);\n        }\n\n        this.setState({\n            userList: newState\n            })\n        })\n\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            userListName: event.target.value\n        })\n    }\n\n    handleClick = (event) => {\n        event.preventDefault();\n        \n        const newList = firebase.database().ref();        \n        const dataToPush = {\n          name: this.state.userListName,\n          list: this.state.movies\n        }\n\n        newList.push(dataToPush);\n        \n        this.setState({\n            userListName: ''\n        })\n\n    }\n\n    // Create handle to delete list\n    handleDeleteList = (deleteList) => {\n        const dbRef = firebase.database().ref();\n\n        dbRef.child(deleteList).remove();\n    }\n\n    // Handle to delete movie\n    handleDeleteMovie = (movieListKey, indexOfMovie) => {\n      // Retrieve the two keys from render\n      // Go to database and find record based on movielistkey\n      // Inside of this record refer to list and find the index based on the indexOfMovie\n      // Remove index from array!\n\n      console.log(movieListKey, indexOfMovie)\n      const dbRef = firebase.database().ref(`${movieListKey}/list`);\n\n      dbRef.child(indexOfMovie).remove();\n    }\n\n    render() {\n        return(\n            <div className=\"wrapper\">\n                <FormUserList \n                handleChange={this.handleChange}\n                handleClick={this.handleClick}\n                userListName={this.state.userListName}\n                />\n                <SavedList \n                userList={this.state.userList}\n                handleDeleteList={this.handleDeleteList}\n                handleDeleteMovie={this.handleDeleteMovie}\n                />\n\n            </div>\n        )\n    }\n}\n\nexport default UserList;","import React from 'react'\nimport { \n  QuickFlickPicker,\n  MovieDetails ,\n  UserList,\n} from './container'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={UserList} />  \n      <Route exact path=\"/\" component={QuickFlickPicker} />  \n      <Route exact path=\"/movie/:movieID\" component={UserList} />  \n\n      <Route exact path=\"/movie/:movieID\" component={MovieDetails} />\n    </Router>\n  )\n}\n\nexport default Routes","import React, { Component } from 'react'\nimport Routes from './Routes'\nimport { Header, Footer } from './components'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Routes />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}