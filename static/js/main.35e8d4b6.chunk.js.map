{"version":3,"sources":["assets/Header.png","helpers/api.js","firebase.js","components/Gallery.js","components/SearchBar.js","components/FormUserList.js","components/SavedList.js","components/Header.js","components/Footer.js","container/UserList.js","container/QuickFlickPicker.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","searchMovies","movieName","axios","url","params","api_key","language","sort_by","include_adult","include_video","page","query","then","res","data","results","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Gallery","props","handleAddMovie","movieListId","database","ref","on","snapshot","listNames","val","key","list","push","setState","movieListToPush","update","state","usersQuery","this","movies","movieData","className","map","movie","id","title","src","poster_path","alt","movieList","onClick","info","name","Component","SearchBar","handleSearchText","handleSearch","handleSubmit","action","onSubmit","type","placeholder","onChange","e","aria-label","class","FormUserList","handleChange","handleClick","userListName","htmlFor","value","SavedList","userList","handleDeleteList","handleDeleteMovie","listName","listItem","index","Header","image","Footer","UserList","event","target","preventDefault","newList","dataToPush","deleteList","child","remove","movieListKey","indexOfMovie","newState","listData","galleryInfo","QuickFlickPicker","searchText","searched","dataFromUserList","galleryData","userQuery","Routes","basename","process","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.35e8d4b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Header.b6199035.png\";","import axios from 'axios'\n\n// Holds all the API calls and exports them\n\n// Initial displayed movies call\nexport const discoverMovies = () => {\n  return axios({\n    url: `https://api.themoviedb.org/3/discover/movie`,\n    params: {\n      api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n      language: 'en-US',\n      sort_by: 'popularity.desc',\n      include_adult: 'false',\n      include_video: 'false',\n      page: 1,\n    },\n  }).then((res) => {\n    res = res.data.results;\n    return res\n  })\n}\n\n// Searched movies call\nexport const searchMovies = (movieName) => {\n  return axios({\n    url: `https://api.themoviedb.org/3/search/movie`,\n    params: {\n      api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n      language: 'en-US',\n      sort_by: 'popularity.desc',\n      include_adult: 'false',\n      include_video: 'false',\n      page: 1,\n      query: movieName\n    },\n  }).then((res) => {\n    res = res.data.results;\n    return res\n  })\n}\n\n// Gets movie details\nexport const searchMovieDetails = (movieID) => {\n  return axios({\n    url: `https://api.themoviedb.org/3/movie/${movieID}`,\n    params: {\n      api_key: 'f012df5d63927931e82fe659a8aaa3ac',\n      language: 'en-US',\n      sort_by: 'popularity.desc',\n      include_adult: 'false',\n      include_video: 'false',\n      page: '1'\n    },\n  }).then( (res) => {\n    return res.data\n  })\n}\n\n\n\n","  import firebase from 'firebase/app';\n  import 'firebase/database';\n\n  // Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCGTiHiUbOdDgDWLE_5L-vE5Ti1Nr9FyDw\",\n    authDomain: \"quick-flick-picker-1d7bd.firebaseapp.com\",\n    databaseURL: \"https://quick-flick-picker-1d7bd.firebaseio.com\",\n    projectId: \"quick-flick-picker-1d7bd\",\n    storageBucket: \"quick-flick-picker-1d7bd.appspot.com\",\n    messagingSenderId: \"1031062113355\",\n    appId: \"1:1031062113355:web:f817b635cd825646d151ce\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export default firebase;\n","import React, { Component } from 'react';\nimport firebase from '../firebase';\n\n// Maps out user's search query and displays movie results and buttons to add movies to lists\n// Gets props from QuickFlickPicker.js\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movieListToPush: [],\n      usersQuery: ''\n    }\n  }\n\n  // Adds movie selection to firebase and updates state\n  handleAddMovie = (movieListId, movieName) => {\n    const dbRef = firebase.database().ref();\n    \n    dbRef.on('value', (snapshot) => {\n      \n      let listNames = [];\n      \n      const data = snapshot.val();\n\n      for (let key in data) {\n        if (key === movieListId) {\n          listNames = [...data[key].list]\n          \n        }\n      }\n\n      listNames.push(movieName)\n\n      this.setState({\n        movieListToPush: listNames\n      })\n      \n    })\n\n    const dbRefToMovieList = firebase.database().ref(`${movieListId}/list`);   \n    dbRefToMovieList.update(this.state.movieListToPush);\n\n  }\n  \n\n  render() {\n    \n    const { movies, movieData } = this.props\n    \n    return (\n      <div className=\"catalogue wrapper\">\n        {\n          movies.map((movie) => {\n          return (\n            <div key={`frag-${movie.id}`}>\n\n              <div className=\"movie\">\n                <p className=\"movieTitles\">{`${movie.title}`}</p>\n                <img \n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={`Movie poster for ${movie.title}`} \n                />\n              </div>\n\n              <div className=\"buttonContainer\">\n\n                {\n                  movieData.map((movieList) => {\n                    return (\n                      <button className=\"addMovieButton\" onClick={() => {\n                        this.handleAddMovie(movieList.key, movie.title)\n                      }} >{`Add movie to ${movieList.info.name} list`}</button>\n                    )\n\n                  })\n                }\n\n              </div>\n\n            </div>\n            );\n          })\n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default Gallery;","import React from 'react'\n\n// Component for Rendering the Search Bar\n// Recieves props from QuickPickFlicker.js\n\nconst SearchBar = (props) => {\n\n  const { handleSearchText, handleSearch, handleSubmit } = props\n\n  return (\n    <div className=\"searchBar wrapper\">\n\n      <form className=\"searchForm\" action=\"submit\" onSubmit={handleSubmit}>\n        <legend>Search for movies</legend>\n\n        <div className=\"formFlexContainer\">\n          <label className=\"srOnly\" >Type in a movie to search</label>\n          <input type=\"text\" placeholder=\"Search for movies\" onChange={(e) => handleSearchText(e)}  />\n          <button className=\"searchButton\"  title=\"Search\" aria-label=\"Search\" onClick={handleSearch}><i class=\"fas fa-search\"></i></button>\n        </div>\n        \n      </form>\n\n    </div>\n  )\n\n}\n\nexport default SearchBar","import React from 'react'\n\n// Contains the form for the user to create lists\n// Gets props from UserList.js\n\nconst FormUserList = (props) => {\n  const { handleChange, handleClick, userListName } = props\n\n  return (\n    <div className=\"formContainer\">\n\n      <form action=\"text\">\n        <fieldset>\n          <legend>Create your list</legend>\n\n          <div className=\"newListContainer\">\n            <label className=\"srOnly\" htmlFor=\"newList\">New list here</label>\n            <input onChange={handleChange} type=\"text\" name=\"newList\" value={userListName} placeholder=\"Add your list here\" id=\"newList\" className=\"newList\"/>\n            <button className=\"newListButton\" onClick={handleClick}>+</button>\n          </div>\n          \n        </fieldset>\n                \n      </form>\n    </div>\n  )\n}\n\nexport default FormUserList","import React from 'react'\n\n// Render's the user lists by mapping out the listNames and the ListItems\n// Gets props from UserList\n\nconst SavedList = (props) => {\n  const { userList, handleDeleteList, handleDeleteMovie } = props\n  return (\n    <ul className=\"movieListContainer\">\n      {\n        userList.map((listName) => {\n          return(\n            <li className=\"movieList\" key={listName.key}>\n\n              <div className=\"movieListTitle\">\n                <p>{listName.info.name}</p>\n                <button \n                  className=\"trashButton\" aria-label=\"Delete List\" \n                  onClick={() => { handleDeleteList(listName.key) }}>\n                  <i class=\"fas fa-trash-alt\"></i>\n                </button>\n              </div>  \n\n              <div className=\"selectedMoviesinList\">\n                <ul>\n                  {\n                    listName.info.list.map((listItem, index) => {\n                      return (\n                        <li key={`${listName.key}-${index}`} className=\"selectedMovies\">\n                        <p>{listItem}</p>\n                        <button \n                          aria-label=\"Delete Movie\" className=\"trashButtonMovie\" \n                          onClick={() => { handleDeleteMovie(listName.key, index) }} >\n                          <i class=\"fas fa-trash-alt\"></i>\n                        </button>\n                        </li>\n                      )\n                    })\n                  }\n                </ul>\n              </div>\n\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n  \n}\n\nexport default SavedList\n\n\n","import React from 'react';\nimport image from '../assets/Header.png';\n\n// Header title and subtitle component\n\nconst Header = () => {\n  return(\n    <header>\n      <div className=\"wrapper headerContainer\">\n        <div className=\"titleContainer\">\n\n          <h1>Quick Flick Picker</h1>\n          <h2>A curator for blockbusters and movies</h2>\n        </div>\n\n        <div className=\"imageContainer\">\n          <img src={image} alt=\"Retro camera\"/>\n        </div>\n\n      </div> \n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\n// Footer attribution \n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"wrapper\">\n        <p>Developed by Krupali Thakkar, David Allen-Jordan, Pik Lin Hoe</p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport firebase from '../firebase';\nimport { FormUserList } from '../components/'\nimport { SavedList } from '../components/'\n\n// Merge's user's queries and Components\n// Initializes firebase and pushes data structure to firebase as user creates a list\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userList: [],\n      userListName: '',\n      movies: ['Start adding to this list']\n      }\n  }\n\n  // Initializes firebase and updates with state\n  componentDidMount() {\n    const dbRef = firebase.database().ref();\n        \n    dbRef.on('value', (snapshot) => {\n\n      const newState = [];\n      const data = snapshot.val();\n\n      for (let key in data) {\n        const listData = {\n          key: key,\n          info: data[key],\n        }\n            \n        newState.push(listData);\n\n      }\n\n      // Send data to parent\n      this.props.galleryInfo(newState);\n\n      this.setState({\n        userList: newState\n      })\n            \n    })\n\n  }\n\n  // Updates the state as user types\n  handleChange = (event) => {\n    this.setState({\n      userListName: event.target.value\n    })\n  }\n\n  // Pushes the list structure to firebase from user input\n  handleClick = (event) => {\n    event.preventDefault();\n        \n    const newList = firebase.database().ref();        \n    const dataToPush = {\n      name: this.state.userListName,\n      list: this.state.movies\n    }\n\n    newList.push(dataToPush);\n        \n    this.setState({\n      userListName: ''\n    })\n  }\n\n  // Deletes list from firebase \n  handleDeleteList = (deleteList) => {\n    const dbRef = firebase.database().ref();\n    dbRef.child(deleteList).remove();\n  }\n\n  // Deletes movie from list in firebase\n  handleDeleteMovie = (movieListKey, indexOfMovie) => {\n    const dbRef = firebase.database().ref(`${movieListKey}/list`);\n    dbRef.child(indexOfMovie).remove();\n  }\n    \n  render() {\n    return(\n      <div className=\"wrapper\">\n\n        <FormUserList \n        handleChange={this.handleChange}\n        handleClick={this.handleClick}\n        userListName={this.state.userListName}\n        />\n        <SavedList \n        userList={this.state.userList}\n        handleDeleteList={this.handleDeleteList}\n        handleDeleteMovie={this.handleDeleteMovie}\n        />\n\n      </div>\n    )\n  }\n  \n}\n\nexport default UserList;","import React, { Component } from 'react'\nimport { discoverMovies, searchMovies } from '../helpers/api'\nimport { Gallery, SearchBar } from '../components';\nimport UserList from '../container/UserList';\n\n// This is the main App Component, holds event listeners and state, Sends state as props to various children Components\n\nclass QuickFlickPicker extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movies: [],\n      searchText: '',\n      searched: false,\n      galleryData: []\n    }\n  }\n\n  // Gets a default list of movies after Component is loaded\n  componentDidMount() {\n    discoverMovies()\n      .then(data => this.setState({ movies: data }))\n  }\n\n  // Sets State with the user's search query text\n  handleSearchText = (e) => {\n    this.setState({ searchText: e.target.value })\n  }\n\n  // Saves the user's query in state\n  handleSearch = () => {\n    searchMovies(this.state.searchText)\n      .then(data => this.setState({ movies: data}))\n  }\n\n  // Runs a search with the user's query passed down through state\n  handleSubmit = (event) => {\n    event.preventDefault();\n    searchMovies(this.state.searchText)\n    .then(data => this.setState({ movies: data, searched: true}))\n  }\n\n  // Moves the list data toward Gallery Component\n  movieData = (dataFromUserList) => {\n    this.setState({\n      galleryData: dataFromUserList\n    })\n  }\n\n  render() {\n    const { movies, galleryData } = this.state\n\n    return (\n      <div>\n\n        <UserList galleryInfo={this.movieData}/>\n        <SearchBar \n          handleSearchText={this.handleSearchText} \n          handleSearch={this.handleSearch} \n          handleSubmit={this.handleSubmit}\n        />\n        <Gallery \n          movies={movies} \n          movieData={galleryData}\n          userQuery={this.state.searchText}\n        />\n\n      </div>\n    )\n  }\n\n}\n\nexport default QuickFlickPicker","import React from 'react'\nimport { QuickFlickPicker, UserList } from './container'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n// Router Component for changing views\n\nconst Routes = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/movie/:movieID\" component={UserList} />  \n      <Route exact path=\"/\" component={QuickFlickPicker} />  \n    </Router>\n  )\n}\n\nexport default Routes","import React, { Component } from 'react'\nimport Routes from './Routes'\nimport { Header, Footer } from './components'\n\n// Parent Component that connects Header, Footer and Routes\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Routes />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}